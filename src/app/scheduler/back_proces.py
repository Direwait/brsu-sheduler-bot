# src/app/scheduler/simple_checker.py
import asyncio
from telegram.ext import Application

from src.app.scheduler.api_logic import get_fakultet_url, get_all_users
from src.app.service.find_url.FileFinder import newest_files


async def background_checker(app: Application):
    """–ü—Ä–æ—Å—Ç–æ–π —Ñ–æ–Ω–æ–≤—ã–π –ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫ - –ù–ï –õ–û–ú–ê–ï–¢ –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ö–û–î"""
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏–π —Ñ–∞–π–ª–æ–≤
    last_files = {}

    print("üîÑ –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–ø—É—â–µ–Ω–∞")

    while True:
        try:
            await asyncio.sleep(1800)  # 30 –º–∏–Ω—É—Ç (–º–æ–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∞)

            print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")

            # –§–∞–∫—É–ª—å—Ç–µ—Ç—ã –∏–∑ —Ç–≤–æ–µ–≥–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞
            fakultets = ["–§–ò–ó–ú–ê–¢"]

            for fakultet in fakultets:
                url = get_fakultet_url(fakultet)
                current_file, previous_file = newest_files(url)

                print(f"üìÅ {fakultet}: —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª - {current_file}")

                # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                if fakultet not in last_files:
                    last_files[fakultet] = current_file
                    continue

                # –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                if last_files[fakultet] != current_file:
                    print(f"üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è {fakultet}!")
                    await notify_fakultet_users(app, fakultet)
                    last_files[fakultet] = current_file  # –û–±–Ω–æ–≤–ª—è–µ–º

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

async def notify_fakultet_users(app: Application, fakultet: str):
    """–£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞"""
    message = (
        f"üì¢ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!*\n"
        f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {fakultet}\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
    )

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º—ã
    all_users = get_all_users()

    notified_count = 0
    for user_id, user_data in all_users.items():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —ç—Ç–æ—Ç —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
        if user_data.get('fakultet') == fakultet:
            try:
                await app.bot.send_message(
                    chat_id=user_id,
                    text=message,
                    parse_mode='Markdown'
                )
                notified_count += 1
                print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å {user_id}: {e}")

    print(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notified_count}")